// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<float4> InputIndentMap;
Texture2D<float4> ObjectDepthMap;
RWTexture2D<float4> OutputIndentMap;

float DeltaTime = 0.02f;
float RecoverySpeed = 0.0f;
float IndentValueDeltaHeightOffset = 0.0f;

float Remap(float value, float from1, float from2, float to1, float to2)
{
    return to1 + (value - from1) * (to2 - to1) / (from2 - from1);
}

[numthreads(16, 16, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float curDepth = InputIndentMap[id.xy].r;
    // Fade out indent pixels.
    float rate = DeltaTime * RecoverySpeed;
    curDepth = max(curDepth - rate, 0.0);
    curDepth = curDepth > 0.0 ? curDepth + IndentValueDeltaHeightOffset : curDepth;
    float depth = ObjectDepthMap[id.xy].r;
    curDepth = clamp(max(curDepth, depth), 0, 1);
    OutputIndentMap[id.xy] = float4(curDepth, 0, 0, 0);
}

